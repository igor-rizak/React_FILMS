{"version":3,"file":"static/js/703.7d5eacd3.chunk.js","mappings":"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","sources":["API/Api.js","components/listSearchMovies/ListSearchMovies.styled.js","components/listSearchMovies/listSearchMovies.jsx","Pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const URL_POSTER = 'https://image.tmdb.org/t/p/w200/'\nconst API_KEY = 'fabdbd455cf8a28d4b9bd01e2909b151';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n\nexport const getTrending = async () => {\n  const filter = `trending/movie/day?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(`${BASE_URL}${filter}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovies = async (query, page = 1) => {\n  const filter = `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`;\n  try {\n    const response = await axios.get(`${BASE_URL}${filter}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  const filter = `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  try {\n    const response = await axios.get(`${BASE_URL}${filter}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const key = 'fabdbd455cf8a28d4b9bd01e2909b151';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}`;\n  const filter = `?api_key=${key}&language=en-US`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  return data;\n}\n\nexport const getMovieCredits = async movieId => {\n  const filter = `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  try {\n    const response = await axios.get(`${BASE_URL}${filter}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 16px;\n  padding: 8px;\n  border-bottom: 1px solid #ddd;\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  \n  &:hover,\n  &:focus {\n    text-decoration: underline;\n    color: blue;\n  }\n\n  h2 {\n    margin: 0;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, ListItem, MovieLink } from './ListSearchMovies.styled';\n\nexport const ListSearchMovies = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {films.map(film => (\n        <ListItem key={film.id}>\n          <MovieLink to={`/movie/${film.id}`} state={{ from: location }}>\n            <h2>{film.title}</h2>\n          </MovieLink>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'API/Api';\nimport { ListSearchMovies } from 'components/listSearchMovies/listSearchMovies';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('q') ?? '';\n  const [inputQuery, setInputQuery] = useState(query);\n\n  useEffect(() => {\n    if (query) {\n      searchMovie(query);\n    }\n  }, [query]);\n\n  const searchMovie = async query => {\n    if (!query) return;\n    try {\n      const searchMovies = await getSearchMovies(query);\n      setMovies(searchMovies);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  };\n\n  const handleSearchClick = () => {\n    setSearchParams({ q: inputQuery });\n    setInputQuery('');\n  };\n\n  const changeInput = e => {\n    setInputQuery(e.target.value);\n  };\n\n  return (\n    <>\n      <input\n        value={inputQuery}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        onChange={changeInput}\n      />\n      <button type=\"button\" onClick={handleSearchClick}>\n        Search\n      </button>\n      {movies.length > 0 && <ListSearchMovies films={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["URL_POSTER","API_KEY","BASE_URL","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","filter","response","_context","prev","next","concat","axios","sent","abrupt","data","results","t0","console","log","stop","apply","arguments","getSearchMovies","_ref2","_callee2","query","page","_args2","_context2","length","undefined","_x","getMovieReviews","_ref3","_callee3","movieId","_context3","_x2","getMovieDetails","_ref4","_callee4","url","_context4","fetch","json","_x3","getMovieCredits","_ref5","_callee5","_context5","_x4","List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","MovieLink","Link","_templateObject3","ListSearchMovies","films","location","useLocation","_jsx","children","map","film","to","id","state","from","title","_searchParams$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","_useState3","_useState4","inputQuery","setInputQuery","useEffect","searchMovie","searchMovies","error","_jsxs","_Fragment","value","type","autoComplete","autoFocus","placeholder","onChange","e","target","onClick","q"],"sourceRoot":""}